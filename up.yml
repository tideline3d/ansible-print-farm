## Common Setups for all hosts
- hosts: all
  roles:
   - node_exporter
   - common
   - rpi_exporter   

## Log all hosts syslog to Loki
- hosts: all
  become: yes
  roles:
    - role: patrickjahns.promtail
      vars: 
        promtail_config_include_default_file_sd_config: False
        promtail_config_clients:
          - url: "http://192.168.42.242:3100/loki/api/v1/push"
            external_labels:
              host: "{{ ansible_hostname }}"
        promtail_config_positions:
          filename: "{{ promtail_positions_directory }}/positions.yaml"
          sync_period: "60s"

        promtail_config_scrape_configs:
          - job_name: system
            static_configs:
            - targets:
                - localhost
              labels:
                job: varlogs
                __path__: /var/log/*log
          - job_name: octoprint
            static_configs:
            - targets:
              - localhost
              labels:
                host: "{{ ansible_hostname }}"
                job: octoprint
                __path__: /home/pi/.octoprint/logs/*.log

## Octoprint Hosts
- hosts: octoprint
  vars: 
    - install_mjpg_streamer: false
    - reset_config: false
    - octoprint_url: "https://github.com/OctoPrint/OctoPrint/archive/1.5.2.zip"
  become: yes
  roles: 
   - semuadmin.octoprint
   - octoprint_plugins

- hosts: monitoring_server
  roles:
    - role: monitoring_server
    # - role: cloudalchemy.prometheus
    #   vars:
    #     prometheus_scrape_configs:
    #       - job_name: "prometheus"
    #         metrics_path: "/metrics"
    #         static_configs:
    #         - targets:
    #           - "{{ ansible_host }}:9090"
    #       - job_name: "system"
    #         metrics_path: "/metrics"
    #         static_configs:
    #         - targets:
    #           - "{{ ansible_host }}:9100"  ## This needs to be a list of all hosts, not just the current one
    #       - job_name: "octoprint"   #This needs to be a loop of all printers
    #         metrics_path: "/plugin/prometheus_exporter/metrics"
    #         params:
    #           apikey: ['2F5AB5B30C22485FA75F87A8421C1D3A']  #Do we use a static API key for now, or try to pull the generated ones?
    #         static_configs:
    #         - targets:  #This needs to be a loop of all printers
              # - "{{ ansible_host }}:5000"
    - role: cloudalchemy.grafana
      vars:
        grafana_security:
          admin_user: admin
          admin_password: admin
        grafana_datasources:
          - name: prometheus
            type: prometheus
            url: "http://{{ hostvars[inventory_hostname]['ansible_facts']['eth0']['ipv4']['address'] }}:9090"
            basicAuth: false
        grafana_dashboards:
          - dashboard_id: 1860    #Node Exporter Full Dashboard
            revision_id: 21
            datasource: prometheus

- hosts: octofarm_server
  tasks:
  - name: Add an Apt signing key for MongoDB 4.2
    apt_key:
      url: https://www.mongodb.org/static/pgp/server-4.2.asc 
      state: present
    become: yes
  - name: Add MongoDB 4.2 repository into sources list
    apt_repository:
      repo: deb [ arch=arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse
      state: present
    become: yes
  - name: Add an Apt signing key for Node 12
    apt_key:
      url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
      state: present
    become: yes
  - name: Add Node 12 repository into sources list
    apt_repository:
      repo: deb https://deb.nodesource.com/node_12.x buster main
      state: present
    become: yes
    
  - name: Install Octofarm apt dependencies
    become: yes
    apt:
      update_cache: yes
      pkg:
      - nodejs
      - gcc 
      - g++
      - make
      - mongodb-org
  - name: Git checkout
    git:
      repo: 'https://github.com/NotExpectedYet/OctoFarm.git'
      dest: ~/OctoFarm
      depth: 1
      force: yes  # Does this break things?  We shall see
  - name: Start MongoDB
    become: yes
    systemd:
     state: restarted
     daemon_reload: yes
     enabled: yes
     name: mongod
  - name: Start OctoFarm
    args:
      chdir: ~/OctoFarm/
    shell: pm2 stop OctoFarm ; npm start
  - name: Install pm2
    shell: npm install pm2 -g
    become: yes
  - name: Generate pm2 startup scripts
    shell: pm2 startup  #Run this once to get past their stupid splash screen, ignore it, then run it for real next time
    ignore_errors: yes
    #become: yes
  - name: Generate pm2 startup scripts
    shell: pm2 startup | sed -n 3p | bash #Get the 3rd line of output from startup command and run it as sudo
    args:
      chdir: ~/OctoFarm/
  - name: Save pm2 setup
    shell: pm2 save
    args:
      chdir: ~/OctoFarm/